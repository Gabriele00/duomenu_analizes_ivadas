knitr::opts_chunk$set(echo = TRUE, collapse = TRUE)
library(kableExtra)
con <- url("http://www.delfi.lt")
delfi_html <- readLines(con)
close(con)
head(delfi_html)
x[1]
x <- c("a", "b", "c", "d")
class(x[1])
tupeof(x[1])
typeof(x[1])
typeof(x[[1]])
str(x[[1]])
class(x[[1]])
## 1
if(<condition>) {
library(datasets)
ncol(airquality)
column_mean <- function(y){
nc <- ncol(y)
means <- numeric(nc)
for (i in 1:nc){
means[i] <-mean(y[,i])
}
means
}
library(datasets)
column_mean(airquality)
numeric(nc)
numeric(ncol(airquality))
?numeric
column_mean <- function(y){
nc <- ncol(y)
means <- vector(mode="numeric", length=nc)
for (i in 1:nc){
means[i] <-mean(y[,i])
}
means
}
library(datasets)
column_mean(airquality)
column_mean <- function(y){
nc <- ncol(y)
means <- vector(mode="numeric", length=nc)
for (i in 1:nc){
means[i] <-mean(y[,i])
}
means
}
library(datasets)
column_mean(airquality)
column_mean <- function(y){
nc <- ncol(y)
means <- numeric(nc)
for (i in 1:nc){
means[i] <-mean(y[,i], na.rm = TRUE )
}
print(means)
}
column_mean(airquality)
lm(data=mydata, y~x, model = FALSE, 1:100)
mydata <- data.frame(x=rnorm(1000), y=rnorm(1000))
lm(data=mydata, y~x, model = FALSE, 1:100)
lm(y~x, data=mydata, 1:100, model = FALSE)
lm(y~x, dat=mydata, 1:100, mod = FALSE)
lm (formula= "y~x", data=mydata, subset=1:100,model = FALSE)
plot(lm(formula= "y~x", data=mydata, subset=1:100,model = FALSE))
f<-function(a,b){
a^2
}
f(2) # positional matching a=2
f <- function(a,b){
print(a)
print(b)
}
f(10)  #positional matching a=10
f<-function(a,b){
a^2
}
f(2) # positional matching a=2
f <- function(a,b){
print(a)
print(b)
}
f(10)  #positional matching a=10
f<-function(a,b){
a^2
}
f(2) # positional matching a=2
f <- function(a,b){
print(a)
print(b)
}
f(10)  #positional matching a=10
x <- as.Date("2019-03-27")
class(x)
y <- strptime("2019 January 21, 21:15", format="%Y %B %d, %H:%M")
x-y
x <- as.Date("2019-03-27")
class(x)
y <- strptime("2019 January 21, 21:15", format="%Y %B %d, %H:%M")
y
x-y
as.POSIXct(x)-y
as.POSIXlt(x)-y
x <- as.Date("2019-03-27")
class(x)
y <- strptime("2019 January 21, 21:15", format="%Y %B %d, %H:%M")
class(y)
myplot <- function(x,y,type="l",...){
plot(x,y,type=type,...)
}
par(mfrow=c(1,2))
plot(mydata$x, mydata$y)
myplot(mydata$x, mydata$y)
myplot <- function(x,y,type="l",...){
plot(x,y,type=type,...)
}
par(mfrow=c(1,2))
plot(mydata$x, mydata$y)
myplot(mydata$x, mydata$y)
